jwt:
  secret: ${JWT_SECRET}
  expiration: 86400

management:
  endpoint:
    health:
      show-details: always
  endpoints:
    web:
      base-path: /
      exposure:
        include: "info,health"
server:
  port: 8080
  compression:
    enabled: true
    min-response-size: 2KB
    mime-types: application/json,application/xml,text/html,text/plain,text/css,application/javascript
  tomcat:
    threads:
      max: 500
      min-spare: 50
    connection-timeout: 20000
  servlet:
    context-path: /api/app

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
    version: 5.2.0

cloudinary:
  cloud_name: ${CLOUDINARY_NAME}
  api_key: ${CLOUDINARY_API_KEY}
  api_secret: ${CLOUDINARY_API_SECRET}

spring:
  sendgrid:
    api-key: ${SENDGRID_API_KEY}
    email: ${EMAIL_SENDGRID}
    functions:
      verify-email: ${VERIFICATION_EMAIL}
      reset-password: ${RESET_PASSWORD}

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      dialect: org.hibernate.dialect.PostgreSQLDialect
      ddl-auto: update
      temp:
        use_jdbc_metadata_defaults: false
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
    open-in-view: false

logging:
  level:
    com.example.back_end.AiProfileApp.controller: DEBUG
    com.example.back_end.AiProfileApp.service: DEBUG
    org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer: ERROR
    root: info